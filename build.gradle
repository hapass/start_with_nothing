ext {
    binPath = "bin"
    layoutPath = "layout"
    shadersPath = "src/main/glsl/engine/graphics/rendering"
    hxmlFile = "build.hxml"
    shaderToken = "<!-- INSERT_SHADERS -->"
    emptyString = ""
}

//------------------------------------------------
//Build section.
//------------------------------------------------

//compile the game using haxe compiler
task compile(type: Exec) {
    commandLine "haxe", hxmlFile
}

//copies html5 layout
task copyLayout(type: Copy) {
    from layoutPath
    into binPath
}

//embed shaders into html5 layout
task embedShaders << {
    FileTree tree = fileTree(dir: shadersPath)
    tree.include "**/*.glsl"

    def tags = []

    tree.each { File file ->
        tags << "<script type=\"" << "text/glsl\"" << " id=\"" << file.name.replace(".glsl", "") << "\"" << " >" << "\n" << file.text << "\n" << "</script>" << "\n"
    }

    def file = new File(binPath + "/index.html")
    file.write file.text.replace(shaderToken, tags.join(emptyString))
}

embedShaders.mustRunAfter copyLayout

//build
task build << {
    println "Building..."
}

build.dependsOn compile
build.dependsOn copyLayout
build.dependsOn embedShaders

//------------------------------------------------
//Run section.
//------------------------------------------------

task startServer(type: Exec) {
    workingDir binPath
    commandLine "screen", "-S", "glow_server", "-d", "-m", "python", "-m", "SimpleHTTPServer", "8000"
}

task killServer(type: Exec) {
    commandLine "screen", "-S", "glow_server", "-X", "quit"
}

//run
task run << {
   java.awt.Desktop.desktop.browse "http://localhost:8000".toURI()
}

